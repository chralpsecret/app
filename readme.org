* Application
** how to start
#+begin_src bash
  $ git clone git@github.com:chralpsecret/app
  $ cd app
  $ docker-compose build && docker-compose up -d
#+END_SRC

** backend-service
Provides GRPC interface for communications from http / api - service.
The service use redis as database to save application, message broker and TTL messages.
"TTL messages" are used to handle poll of providers API to get status and update database.

Applications are save in redis database as <application:UUID> with object of application as value.
To handle poll of provider to get status we create a key with same uuid ( application_id ) with TTL. Then we listen to expired keys in redis to handle lookups.
Each request via GRPC to get status we returns data from database and do not make API call to provider.
*** Environment variables
| env          | default                | format                      |
|--------------+------------------------+-----------------------------|
| LENDO_APP    | http://localhost:8000  | http://<url OR ip>:<port>   |
| GRPC_ADDRESS | localhost              | dns address                 |
| GRPC_PORT    | 50051                  | number                      |
| REDIS_URL    | redis://localhost:6379 | redis://<dns address>:<port> |
| loglevel     | info                   | string                      |


** http-service
Simple http service that acts as front and communicates with backend-service via GRPC

*** Environment variables
| env          | default                | format                      |
|--------------+------------------------+-----------------------------|
| GRPC_ADDRESS | localhost              | dns address                 |
| GRPC_PORT    | 50051                  | number                      |
| loglevel     | info                   | string                      |

*** Endpoints
**** Create Application

Create application takes first_name and last_name as params

#+BEGIN_SRC restclient
POST http://localhost:3333/api/application/create
Content-Type: application/json
{
  "first_name": <string>,
  "last_name": <string>
}
#+END_SRC

returns

#+BEGIN_SRC restclient
{
  "application_id": <string>,
  "status": <string>,
  "first_name": <string>,
  "last_name": <string>
}
#+END_SRC
**** Get Application

Get application takes application_id as param

#+BEGIN_SRC restclient
GET http://localhost:3333/api/application/getstatus
Content-Type: application/json
{							
   "application_id": <string>
}
#+END_SRC

returns

#+BEGIN_SRC restclient
{
  "id": <string>,
  "application_id": <string>,
  "status": <string>,
  "first_name": <string>,
  "last_name": <string>
}
#+END_SRC

